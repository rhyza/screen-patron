// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String @id @default(cuid())
  email   String @unique
  hosting Host[]
  events  Rsvp[]

  name      String?
  photo     String?
  city      String?
  bio       String?
  instagram String?
  twitter   String?
  website   String?

  createdAt DateTime @default(now())
}

model Event {
  id     String @id @default(cuid())
  name   String?
  hosts  Host[]
  guests Rsvp[]

  photo       String?
  description String?
  trailer     String?
  dateStart   DateTime? @db.Timestamptz(3)
  dateEnd     DateTime? @db.Timestamptz(3)
  location    String?
  city        String?
  capacity    Int?
  cost        Decimal   @db.Decimal(6, 2) @default(0)

  plusOneLimit Int?
  reminders    DateTime[] @db.Timestamptz(3)
  survey       String[]

  acceptRsvp       Boolean @default(true)
  requestDonations Boolean @default(false)
  requireApproval  Boolean @default(false)
  requirePassword  Boolean @default(false)
  requireSurvey    Boolean @default(false)
  showGuestCount   Boolean @default(true)
  showGuestList    Boolean @default(true)
  showLocation     Boolean @default(true)

  createdAt DateTime @default(now())
  published Boolean  @default(false)
}

model Host {
  event      Event      @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId    String
  user       User       @relation(fields: [userId], references: [id])
  userId     String
  name       String?

  @@id(name: "id", fields: [eventId, userId])
}

model Rsvp {
  event       Event   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId     String
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  status      Status
  name        String?
  numPlusOnes Int     @default(0)

  @@id(name: "id", fields: [eventId, userId])
}

enum Status {
  GOING
  MAYBE
  NOT_GOING
}
